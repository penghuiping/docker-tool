NAME: mysql
LAST DEPLOYED: Wed Dec 18 09:46:38 2019
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql
  labels:
    app: mysql
    chart: mysql-6.5.1
    release: "mysql"
    heritage: "Helm"
type: Opaque
data:
  mysql-root-password: "MDJvRnU4ZVU3Tg=="
  
  mysql-replication-password: "WVZWVzh4b1dVeQ=="
---
# Source: mysql/templates/master-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-master
  labels:
    app: mysql
    component: "master"
    chart: mysql-6.5.1
    release: "mysql"
    heritage: "Helm"
data:
  my.cnf: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: mysql/templates/slave-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-slave
  labels:
    app: mysql
    component: "slave"
    chart: mysql-6.5.1
    release: "mysql"
    heritage: "Helm"
data:
  my.cnf: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: mysql/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: "mysql"
    component: "master"
    chart: mysql-6.5.1
    release: "mysql"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: "mysql"
    component: "master"
    release: "mysql"
---
# Source: mysql/templates/slave-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-slave
  labels:
    app: "mysql"
    chart: mysql-6.5.1
    component: "slave"
    release: "mysql"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: "mysql"
    component: "slave"
    release: "mysql"
---
# Source: mysql/templates/master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-master
  labels:
    app: "mysql"
    chart: mysql-6.5.1
    component: "master"
    release: "mysql"
    heritage: "Helm"
spec:
  selector:
    matchLabels:
      app: mysql
      release: "mysql"
      component: "master"
  serviceName: "mysql-master"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "mysql"
        chart: mysql-6.5.1
        component: "master"
        release: "mysql"
        heritage: "Helm"
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "mysql"
                  release: "mysql"      
      containers:
      - name: "mysql"
        image: docker.io/bitnami/mysql:8.0.18-debian-9-r21
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: mysql-root-password
        - name: MYSQL_DATABASE
          value: "my_database"
        - name: MYSQL_REPLICATION_MODE
          value: "master"
        - name: MYSQL_REPLICATION_USER
          value: "replicator"
        - name: MYSQL_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: mysql-replication-password
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MYSQL_ROOT_PASSWORD"]
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MYSQL_ROOT_PASSWORD"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {}
        volumeMounts:
        - name: data
          mountPath: /bitnami/mysql
        - name: config
          mountPath: /opt/bitnami/mysql/conf/my.cnf
          subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mysql-master
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "mysql"
          component: "master"
          release: "mysql"
          heritage: "Helm"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: mysql/templates/slave-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-slave
  labels:
    app: "mysql"
    chart: mysql-6.5.1
    component: "slave"
    release: "mysql"
    heritage: "Helm"
spec:
  selector:
    matchLabels:
      app: mysql
      release: "mysql"
      component: "slave"
  serviceName: "mysql-slave"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "mysql"
        chart: mysql-6.5.1
        component: "slave"
        release: "mysql"
        heritage: "Helm"
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "mysql"
                  release: "mysql"      
      containers:
      - name: "mysql"
        image: docker.io/bitnami/mysql:8.0.18-debian-9-r21
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MYSQL_REPLICATION_MODE
          value: "slave"
        - name: MYSQL_MASTER_HOST
          value: mysql
        - name: MYSQL_MASTER_PORT_NUMBER
          value: "3306"
        - name: MYSQL_MASTER_ROOT_USER
          value: "root"
        - name: MYSQL_MASTER_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: mysql-root-password
        - name: MYSQL_REPLICATION_USER
          value: "replicator"
        - name: MYSQL_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: mysql-replication-password
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MYSQL_MASTER_ROOT_PASSWORD"]
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MYSQL_MASTER_ROOT_PASSWORD"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {}
        volumeMounts:
        - name: data
          mountPath: /bitnami/mysql
        - name: config
          mountPath: /opt/bitnami/mysql/conf/my.cnf
          subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mysql-slave
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "mysql"
          component: "slave"
          release: "mysql"
          heritage: "Helm"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"

NOTES:
Please be patient while the chart is being deployed

Tip:

  Watch the deployment status using the command: kubectl get pods -w --namespace default

Services:

  echo Master: mysql.default.svc.cluster.local:3306
  echo Slave:  mysql-slave.default.svc.cluster.local:3306

Administrator credentials:

  echo Username: root
  echo Password : $(kubectl get secret --namespace default mysql -o jsonpath="{.data.mysql-root-password}" | base64 --decode)

To connect to your database:

  1. Run a pod that you can use as a client:

      kubectl run mysql-client --rm --tty -i --restart='Never' --image  docker.io/bitnami/mysql:8.0.18-debian-9-r21 --namespace default --command -- bash

  2. To connect to master service (read/write):

      mysql -h mysql.default.svc.cluster.local -uroot -p my_database

  3. To connect to slave service (read-only):

      mysql -h mysql-slave.default.svc.cluster.local -uroot -p my_database

To upgrade this helm chart:

  1. Obtain the password as described on the 'Administrator credentials' section and set the 'root.password' parameter as shown below:

      ROOT_PASSWORD=$(kubectl get secret --namespace default mysql -o jsonpath="{.data.mysql-root-password}" | base64 --decode)
      helm upgrade mysql bitnami/mysql --set root.password=$ROOT_PASSWORD
